# Dockerfile para el Frontend (React) - Usando Multi-stage build

# --- Etapa 1: Build ---
# Esta etapa se encarga de construir la aplicación de React
FROM node:20-alpine AS build

# Establecemos el directorio de trabajo
WORKDIR /app

# Copiamos los archivos de dependencias (package.json y yarn.lock)
COPY package.json yarn.lock ./

# Instalamos las dependencias usando Yarn
RUN yarn install

# Copiamos el resto del código fuente del frontend
COPY . .

# Copiamos el archivo de configuración de Nginx para que esté disponible
COPY nginx.conf /etc/nginx/nginx.conf

# Ejecutamos el script de build para generar los archivos estáticos
RUN yarn build

# --- Etapa 2: Producción ---
# Esta etapa se encarga de servir los archivos estáticos con un servidor ligero Nginx
FROM nginx:stable-alpine

# Copiamos los archivos estáticos construidos en la etapa anterior desde la carpeta 'dist'
COPY --from=build /app/dist /usr/share/nginx/html

# Copiamos el archivo de configuración de Nginx al directorio de configuración de Nginx
COPY --from=build /etc/nginx/nginx.conf /etc/nginx/conf.d/default.conf

# Exponemos el puerto 80 para el tráfico HTTP
EXPOSE 80

# El comando por defecto de Nginx se encargará de iniciar el servidor
CMD ["nginx", "-g", "daemon off;"]