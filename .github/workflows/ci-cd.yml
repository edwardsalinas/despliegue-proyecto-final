# .github/workflows/ci-cd.yml
# Pipeline de CI/CD con despliegue a ambientes DEV, QA y PROD.

name: CI/CD - Test, Build, and Deploy

on:
  push:
    branches: [ "main", "develop" ] # Se activa con pushes a main y develop test5
    tags:
      - 'v*' # Se activa al crear tags que empiecen con 'v' (ej. v1.0.0)
  workflow_dispatch:

jobs:
  # --- Job 1: Ejecutar Pruebas (Sin cambios) ---
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install backend dependencies
        working-directory: ./10-calendar-backend
        run: npm install
      - name: Install frontend dependencies
        working-directory: ./10-calendar
        run: yarn install
      - name: Run frontend tests
        working-directory: ./10-calendar
        run: yarn test --watchAll=false

  # --- Job 2: Construir y Publicar Imágenes ---
  # Este job ahora etiqueta las imágenes según el ambiente test.
  build-backend-image:
    needs: run-tests
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.image_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine Image Tag
        id: image_tag
        run: |
          if [[ $GITHUB_REF == refs/heads/develop ]]; then
            echo "tag=dev" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "tag=qa" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./10-calendar-backend
          push: true
          tags: edwardsalinas/calendar-backend:${{ steps.image_tag.outputs.tag }}

  build-frontend-image:
    needs: run-tests
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.image_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine Image Tag
        id: image_tag
        run: |
          if [[ $GITHUB_REF == refs/heads/develop ]]; then
            echo "tag=dev" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "tag=qa" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./10-calendar
          push: true
          tags: edwardsalinas/calendar-frontend:${{ steps.image_tag.outputs.tag }}

  # --- Job 3: Desplegar a los Ambientes ---
  deploy-backend:
    needs: build-backend-image
    environment:
      name: ${{ (github.ref == 'refs/heads/develop' && 'development') || (github.ref == 'refs/heads/main' && 'qa') || 'production' }}
      url: https://myapp.com # URL del ambiente desplegado (opcional)
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Backend to Environment
        run: |
          echo "Deploying backend tag: ${{ needs.build-backend-image.outputs.image_tag }} to ${{ job.environment.name }}"
          echo "--- Simulating backend deployment ---"
          echo "1. SSH into server (not shown)"
          echo "2. Create .env file from GitHub Secret for backend"
          echo "   echo \"${{ secrets.DOTENV_FILE_BACKEND }}\" > 10-calendar-backend/.env"
          echo "3. Update docker-compose.yml to use the new backend image tag: ${{ needs.build-backend-image.outputs.image_tag }}"
          echo "4. Run docker-compose pull backend"
          echo "5. Run docker-compose up -d backend"
          echo "Backend deployment simulation complete."

  deploy-frontend:
    needs: build-frontend-image
    environment:
      name: ${{ (github.ref == 'refs/heads/develop' && 'development') || (github.ref == 'refs/heads/main' && 'qa') || 'production' }}
      url: https://myapp.com # URL del ambiente desplegado (opcional)
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Frontend to Environment
        run: |
          echo "Deploying frontend tag: ${{ needs.build-frontend-image.outputs.image_tag }} to ${{ job.environment.name }}"
          echo "--- Simulating frontend deployment ---"
          echo "1. SSH into server (not shown)"
          echo "2. Create .env file from GitHub Secret for frontend"
          echo "   echo \"${{ secrets.DOTENV_FILE_FRONTEND }}\" > 10-calendar/.env"
          echo "3. Update docker-compose.yml to use the new frontend image tag: ${{ needs.build-frontend-image.outputs.image_tag }}"
          echo "4. Run docker-compose pull frontend"
          echo "5. Run docker-compose up -d frontend"
          echo "Frontend deployment simulation complete."